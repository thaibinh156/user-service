spring.application.name=user-service
server.port=${SERVER_PORT}

# Access URLs
task.service.url=${TASK_SERVICE_BASE_URL}

# Logging Configuration
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
springfox.documentation.swagger.v2.path=/api/v2/api-docs

# Redis configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# Database Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Google Login
logging.level.org.springframework.security=trace

# Other production-specific configurations
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}

#File
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Value
user.batch.size=5000

# Define logs directory if you want to create the log folder automatically
logging.file.path=logs
# Logging
logging.level.root=INFO
logging.file.name=logs/prod-application.log

# Define the log pattern for console and file
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Ensure that logs are not truncated in case of critical errors
logging.file.max-size=10MB
logging.file.max-history=30

# Swagger Config url
springfox.documentation.swagger.v2.host=${HOST}

# Rabbitmq Configuration
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.password=${RABBITMQ_PASS}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.main.allow-bean-definition-overriding=true

# Access URL
task.service.baseUrl=${TASK_SERVICE_BASE_URL}